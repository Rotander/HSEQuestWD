# Generated by Django 4.0.4 on 2022-05-09 13:13

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Quest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quest_name_ru', models.CharField(help_text="Enter the quest's name (ru)", max_length=50)),
                ('quest_description_ru', models.TextField(help_text="Enter the quest's discription (ru)")),
                ('quest_name_en', models.CharField(help_text="Enter the quest's name (en)", max_length=50)),
                ('quest_description_en', models.TextField(help_text="Enter the quest's discription (en)")),
                ('quest_image', models.ImageField(help_text='Upload an image for the quest', upload_to='uploads')),
                ('quest_time', models.CharField(help_text='Enter estimate time to complete the quest (minutes)', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='QuestPage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page_number', models.IntegerField(help_text="Enter the page's number (min is 0)")),
                ('voice_ru', models.FileField(blank=True, help_text='Upload the voice acting (ru, optional)', upload_to='uploads')),
                ('voice_en', models.FileField(blank=True, help_text='Upload the voice acting (en, optional)', upload_to='uploads')),
                ('quest', models.ForeignKey(help_text='Select a quest for this page', on_delete=django.db.models.deletion.CASCADE, to='quest.quest')),
            ],
            options={
                'ordering': ['page_number'],
            },
        ),
        migrations.CreateModel(
            name='PageParagraph',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(help_text="Enter a parahraph's number (min is 0)")),
                ('paragraph_ru', models.TextField(help_text='Enter the paragraph (ru)')),
                ('paragraph_en', models.TextField(help_text='Enter the paragraph (en)')),
                ('image', models.ImageField(blank=True, help_text='Upload the image for the paragraph (optional)', null=True, upload_to='uploads')),
                ('page', models.ForeignKey(help_text='Select a page for this Paragraph', on_delete=django.db.models.deletion.CASCADE, to='quest.questpage')),
            ],
            options={
                'ordering': ['number'],
            },
        ),
        migrations.CreateModel(
            name='PageHint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hint_text_ru', models.TextField(help_text='Enter a hint for the page (ru)')),
                ('hint_text_en', models.TextField(help_text='Enter a hint for the page (en)')),
                ('quest_page', models.ForeignKey(help_text='Select a page for this hint', null=True, on_delete=django.db.models.deletion.CASCADE, to='quest.questpage')),
            ],
        ),
        migrations.CreateModel(
            name='PageAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page_answer_ru', models.CharField(help_text='Enter an answer for the page (ru, only lower case)', max_length=30)),
                ('page_answer_en', models.CharField(help_text='Enter an answer for the page (en, only lower case)', max_length=30)),
                ('quest_page', models.ForeignKey(help_text='Select a page for this answer', null=True, on_delete=django.db.models.deletion.CASCADE, to='quest.questpage')),
            ],
        ),
    ]
